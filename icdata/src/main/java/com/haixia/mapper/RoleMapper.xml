<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haixia.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.haixia.pojo.Role">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="discription" jdbcType="VARCHAR" property="discription" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name, create_time, discription, create_user
  </sql>
  <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ic_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from ic_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.haixia.pojo.Role">
    insert into ic_role (role_id, role_name, create_time, 
      discription, create_user)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{discription,jdbcType=VARCHAR}, #{createUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.haixia.pojo.Role">
    insert into ic_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="discription != null">
        discription,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="discription != null">
        #{discription,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateById" parameterType="com.haixia.pojo.Role">
    update ic_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="discription != null">
        discription = #{discription,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <select id="getAll" resultMap="BaseResultMap">
	  select 
	  <include refid="Base_Column_List" />
	  from ic_role
  </select>
  <update id="updateByPrimaryKey" parameterType="com.haixia.pojo.Role">
    update ic_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      discription = #{discription,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>