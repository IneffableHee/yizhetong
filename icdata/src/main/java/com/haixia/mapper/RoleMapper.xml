<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haixia.mapper.IRoleMapper">
  <resultMap id="BaseResultMap" type="com.haixia.pojo.Role">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="discription" jdbcType="VARCHAR" property="discription" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="role_status" jdbcType="INTEGER" property="roleStatus" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="parent_string" jdbcType="VARCHAR" property="parentString" />
    <collection property="permissionSet" column="permission_id" ofType="com.haixia.pojo.Permission">  
		<id column="permission_id" jdbcType="INTEGER" property="permissionId" />  
		<result column="permission_name" jdbcType="VARCHAR" property="permissionName"/>  
		<result column="permission_type" jdbcType="VARCHAR" property="permissionType"/> 
		<result column="permission_url" jdbcType="VARCHAR" property="permissionUrl"/> 
		<result column="permission_code" jdbcType="VARCHAR" property="permissionCode"/> 
		<result column="parent_id" jdbcType="INTEGER" property="parentId"/> 
		<result column="parent_string" jdbcType="VARCHAR" property="parentString"/> 
		<result column="permission_status" jdbcType="INTEGER" property="permissionStatus"/> 
	</collection>  
  </resultMap>
  <sql id="Base_Column_List_Lite">
   		role_id, role_name, create_time, discription, create_user,role_status,parent_string,parent_id
  </sql>
  <sql id="Base_Column_List">
  	SELECT
	    r.role_id, r.role_name, r.create_time, r.discription, r.create_user,r.role_status,r.parent_string,r.parent_id,
	    p.permission_id,p.permission_name,p.permission_type,p.permission_url,p.permission_code,p.parent_string
 	FROM
 		ic_role as r,    
    	ic_permission as p,    
    	ic_role_permission as rp
    WHERE
    	rp.role_id = r.role_id
    AND    
    	p.permission_id = rp.permission_id
  </sql>
  <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="Base_Column_List" />
    AND r.role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <select id="getByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="Base_Column_List" />
    AND r.role_name = #{roleName,jdbcType=VARCHAR}
  </select>
  <select id="getAll" resultMap="BaseResultMap">
  	SELECT
	<include refid="Base_Column_List_Lite" />
	from ic_role
  </select>
  <select id="getChildren" parameterType="java.lang.String" resultMap="BaseResultMap">
  	SELECT
	<include refid="Base_Column_List_Lite" />
	from ic_role
	where parent_string like #{parentString,jdbcType=VARCHAR}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from ic_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="create" parameterType="com.haixia.pojo.Role">
    insert into ic_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="discription != null">
        discription,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="roleStatus != null">
        role_status,
      </if>
      <if test="parentString != null">
        parent_string,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="discription != null">
        #{discription,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="roleStatus != null">
        #{roleStatus,jdbcType=INTEGER},
      </if>
      <if test="parentString != null">
        #{parentString,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateById" parameterType="com.haixia.pojo.Role">
    update ic_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="discription != null">
        discription = #{discription,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="roleStatus != null">
        role_status = #{roleStatus,jdbcType=INTEGER},
      </if>
      <if test="parentString != null">
        parent_string = #{parentString,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  
</mapper>